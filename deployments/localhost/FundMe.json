{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOnwer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5510090e6b78e9d44554f34175fa8769f6a6967dcfbba61dc4744ee46336b8c5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "971133",
    "logsBloom": "0x
    "blockHash": "0xa5e20ebe1cf623193da2717d949119a866bd7f7beef91022f118c1ccf3c037d1",
    "transactionHash": "0x5510090e6b78e9d44554f34175fa8769f6a6967dcfbba61dc4744ee46336b8c5",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "971133",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "2396d40a0aa06ee86ab8f9fc6f811017",
  "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOnwer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Yomi-Olugbodi Boluwatife\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This Function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding project\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n/** @title A contract for crowd funding\\r\\n * @author Yomi-Olugbodi Boluwatife\\r\\n * @notice This contract is to demo a sample funding project\\r\\n * @dev This implements price feeds as our library\\r\\n */\\r\\ncontract FundMe {\\r\\n    //Type declaration\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    //State Variables\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n    address[] private s_funders;\\r\\n\\r\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\r\\n    address private immutable i_owner;\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n\\r\\n    //Modifiers\\r\\n    modifier onlyOwner() {\\r\\n        // require(msg.sender == owner);\\r\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice This Function funds this contract\\r\\n     * @dev This implements price feeds as our library\\r\\n     */\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\r\\n            \\\"You need to spend more ETH!\\\"\\r\\n        );\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw() public  onlyOwner {\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < s_funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = s_funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public onlyOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n\\r\\n         for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n\\r\\n              s_funders = new address[](0);\\r\\n\\r\\n        (bool callSuccess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\nfunction getOnwer() public view returns (address) {\\r\\n    return i_owner;\\r\\n}\\r\\n\\r\\nfunction getFunder(uint256 index) public view returns (address) {\\r\\n    return s_funders[index];\\r\\n}\\r\\nfunction getAddressToAmountFunded(address funder) public view returns (uint256) {\\r\\n    return s_addressToAmountFunded[funder];\\r\\n}\\r\\n\\r\\nfunction getPriceFeed( ) public view returns (AggregatorV3Interface) {\\r\\n    return s_priceFeed;\\r\\n}\\r\\n\\r\\n}\\r\\n\\r\\n// Mappings cannot be in memory\\r\\n\\r\\n// constructor\\r\\n// receive\\r\\n// fallback\\r\\n// external\\r\\n// public\\r\\n// internal\\r\\n// private\\r\\n// view / pure\\r\\n\",\"keccak256\":\"0xa930b6ae69eb95a302acc33ffa9b7296ef14448c48a9afca646d6d5f1343b9ce\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\n// import \\\"@chainlink/contracts/abi/v0.8/interfaces/AggregatorV3Interface.sol\\\"\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(answer * 10000000000);\\r\\n       \\r\\n    }\\r\\n \\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n         AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x13ecb8a9a83babad06f7f814816044ee6c72de7d5711356f5c9e1080dca76244\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161119738038061119783398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051611031610166600039600081816101fd015281816105aa01526105d001526110316000f3fe60806040526004361061007b5760003560e01c8063b60d42881161004e578063b60d42881461012a578063b634b8e514610134578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d45780639e87a5cd146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a8b565b6101b3565b6040516100b49190610ad1565b60405180910390f35b3480156100c957600080fd5b506100d26101fb565b005b3480156100e057600080fd5b506100e9610435565b6040516100f69190610ad1565b60405180910390f35b34801561010b57600080fd5b50610114610442565b6040516101219190610b4b565b60405180910390f35b61013261046c565b005b34801561014057600080fd5b506101496105a6565b6040516101569190610b75565b60405180910390f35b34801561016b57600080fd5b506101746105ce565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bbc565b61086c565b6040516101aa9190610b75565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610280576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610325576000600182815481106102a6576102a5610be9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610283565b50600067ffffffffffffffff81111561034157610340610c18565b5b60405190808252806020026020018201604052801561036f5781602001602082028036833780820191505090505b5060019080519060200190610385929190610981565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103ac90610c78565b60006040518083038185875af1925050503d80600081146103e9576040519150601f19603f3d011682016040523d82523d6000602084013e6103ee565b606091505b5050905080610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990610cea565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104ab600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b490919063ffffffff16565b10156104ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e390610d56565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053a9190610da5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610653576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b81518110156108685760008282815181106106ff576106fe610be9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561076857610767610c18565b5b6040519080825280602002602001820160405280156107965781602001602082028036833780820191505090505b50600190805190602001906107ac929190610981565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107d390610c78565b60006040518083038185875af1925050503d8060008114610810576040519150601f19603f3d011682016040523d82523d6000602084013e610815565b606091505b5050905080610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090610cea565b60405180910390fd5b505080806001019150506106e1565b5050565b60006001828154811061088257610881610be9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c0836108f0565b90506000670de0b6b3a764000085836108d99190610dd9565b6108e39190610e4a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109629190610f08565b5050509150506402540be400816109799190610f83565b915050919050565b8280548282559060005260206000209081019282156109fa579160200282015b828111156109f95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a1565b5b509050610a079190610a0b565b5090565b5b80821115610a24576000816000905550600101610a0c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5882610a2d565b9050919050565b610a6881610a4d565b8114610a7357600080fd5b50565b600081359050610a8581610a5f565b92915050565b600060208284031215610aa157610aa0610a28565b5b6000610aaf84828501610a76565b91505092915050565b6000819050919050565b610acb81610ab8565b82525050565b6000602082019050610ae66000830184610ac2565b92915050565b6000819050919050565b6000610b11610b0c610b0784610a2d565b610aec565b610a2d565b9050919050565b6000610b2382610af6565b9050919050565b6000610b3582610b18565b9050919050565b610b4581610b2a565b82525050565b6000602082019050610b606000830184610b3c565b92915050565b610b6f81610a4d565b82525050565b6000602082019050610b8a6000830184610b66565b92915050565b610b9981610ab8565b8114610ba457600080fd5b50565b600081359050610bb681610b90565b92915050565b600060208284031215610bd257610bd1610a28565b5b6000610be084828501610ba7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c62600083610c47565b9150610c6d82610c52565b600082019050919050565b6000610c8382610c55565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cd4600b83610c8d565b9150610cdf82610c9e565b602082019050919050565b60006020820190508181036000830152610d0381610cc7565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d40601b83610c8d565b9150610d4b82610d0a565b602082019050919050565b60006020820190508181036000830152610d6f81610d33565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db082610ab8565b9150610dbb83610ab8565b9250828201905080821115610dd357610dd2610d76565b5b92915050565b6000610de482610ab8565b9150610def83610ab8565b9250828202610dfd81610ab8565b91508282048414831517610e1457610e13610d76565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5582610ab8565b9150610e6083610ab8565b925082610e7057610e6f610e1b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9a81610e7b565b8114610ea557600080fd5b50565b600081519050610eb781610e91565b92915050565b6000819050919050565b610ed081610ebd565b8114610edb57600080fd5b50565b600081519050610eed81610ec7565b92915050565b600081519050610f0281610b90565b92915050565b600080600080600060a08688031215610f2457610f23610a28565b5b6000610f3288828901610ea8565b9550506020610f4388828901610ede565b9450506040610f5488828901610ef3565b9350506060610f6588828901610ef3565b9250506080610f7688828901610ea8565b9150509295509295909350565b6000610f8e82610ebd565b9150610f9983610ebd565b9250828202610fa781610ebd565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fdf57610fde610d76565b5b8282058414831517610ff457610ff3610d76565b5b509291505056fea26469706673582212204b4c2f8f1a1a82f5ffcfc33cd083b5ed69a1b85282c2c16066346fa7259db33464736f6c634300081b0033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063b60d42881161004e578063b60d42881461012a578063b634b8e514610134578063be2693f01461015f578063d7b4750c146101765761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d45780639e87a5cd146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a8b565b6101b3565b6040516100b49190610ad1565b60405180910390f35b3480156100c957600080fd5b506100d26101fb565b005b3480156100e057600080fd5b506100e9610435565b6040516100f69190610ad1565b60405180910390f35b34801561010b57600080fd5b50610114610442565b6040516101219190610b4b565b60405180910390f35b61013261046c565b005b34801561014057600080fd5b506101496105a6565b6040516101569190610b75565b60405180910390f35b34801561016b57600080fd5b506101746105ce565b005b34801561018257600080fd5b5061019d60048036038101906101989190610bbc565b61086c565b6040516101aa9190610b75565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610280576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610325576000600182815481106102a6576102a5610be9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610283565b50600067ffffffffffffffff81111561034157610340610c18565b5b60405190808252806020026020018201604052801561036f5781602001602082028036833780820191505090505b5060019080519060200190610385929190610981565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103ac90610c78565b60006040518083038185875af1925050503d80600081146103e9576040519150601f19603f3d011682016040523d82523d6000602084013e6103ee565b606091505b5050905080610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990610cea565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104ab600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b490919063ffffffff16565b10156104ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e390610d56565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053a9190610da5565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610653576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068d575b5050505050905060005b81518110156108685760008282815181106106ff576106fe610be9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561076857610767610c18565b5b6040519080825280602002602001820160405280156107965781602001602082028036833780820191505090505b50600190805190602001906107ac929190610981565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107d390610c78565b60006040518083038185875af1925050503d8060008114610810576040519150601f19603f3d011682016040523d82523d6000602084013e610815565b606091505b5050905080610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090610cea565b60405180910390fd5b505080806001019150506106e1565b5050565b60006001828154811061088257610881610be9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c0836108f0565b90506000670de0b6b3a764000085836108d99190610dd9565b6108e39190610e4a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561093e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109629190610f08565b5050509150506402540be400816109799190610f83565b915050919050565b8280548282559060005260206000209081019282156109fa579160200282015b828111156109f95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a1565b5b509050610a079190610a0b565b5090565b5b80821115610a24576000816000905550600101610a0c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5882610a2d565b9050919050565b610a6881610a4d565b8114610a7357600080fd5b50565b600081359050610a8581610a5f565b92915050565b600060208284031215610aa157610aa0610a28565b5b6000610aaf84828501610a76565b91505092915050565b6000819050919050565b610acb81610ab8565b82525050565b6000602082019050610ae66000830184610ac2565b92915050565b6000819050919050565b6000610b11610b0c610b0784610a2d565b610aec565b610a2d565b9050919050565b6000610b2382610af6565b9050919050565b6000610b3582610b18565b9050919050565b610b4581610b2a565b82525050565b6000602082019050610b606000830184610b3c565b92915050565b610b6f81610a4d565b82525050565b6000602082019050610b8a6000830184610b66565b92915050565b610b9981610ab8565b8114610ba457600080fd5b50565b600081359050610bb681610b90565b92915050565b600060208284031215610bd257610bd1610a28565b5b6000610be084828501610ba7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c62600083610c47565b9150610c6d82610c52565b600082019050919050565b6000610c8382610c55565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610cd4600b83610c8d565b9150610cdf82610c9e565b602082019050919050565b60006020820190508181036000830152610d0381610cc7565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d40601b83610c8d565b9150610d4b82610d0a565b602082019050919050565b60006020820190508181036000830152610d6f81610d33565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db082610ab8565b9150610dbb83610ab8565b9250828201905080821115610dd357610dd2610d76565b5b92915050565b6000610de482610ab8565b9150610def83610ab8565b9250828202610dfd81610ab8565b91508282048414831517610e1457610e13610d76565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5582610ab8565b9150610e6083610ab8565b925082610e7057610e6f610e1b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9a81610e7b565b8114610ea557600080fd5b50565b600081519050610eb781610e91565b92915050565b6000819050919050565b610ed081610ebd565b8114610edb57600080fd5b50565b600081519050610eed81610ec7565b92915050565b600081519050610f0281610b90565b92915050565b600080600080600060a08688031215610f2457610f23610a28565b5b6000610f3288828901610ea8565b9550506020610f4388828901610ede565b9450506040610f5488828901610ef3565b9350506060610f6588828901610ef3565b9250506080610f7688828901610ea8565b9150509295509295909350565b6000610f8e82610ebd565b9150610f9983610ebd565b9250828202610fa781610ebd565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fdf57610fde610d76565b5b8282058414831517610ff457610ff3610d76565b5b509291505056fea26469706673582212204b4c2f8f1a1a82f5ffcfc33cd083b5ed69a1b85282c2c16066346fa7259db33464736f6c634300081b0033",
  "devdoc": {
    "author": "Yomi-Olugbodi Boluwatife",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This Function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding project",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 86,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}